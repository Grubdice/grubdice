
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'flyway'

def versions = [
        springVersion: '4.0.0.RELEASE',
        jacksonVersion: '2.3.0',
        cargo: '1.4.5',
        tomcatVersion: '7.0.42',
        hibernateVersion: '4.3.0.Final',
        flywayVersion: '2.3.1'
]

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.gradle.api.plugins:gradle-tomcat-plugin:1.0")
        classpath("com.googlecode.flyway:flyway-gradle-plugin:2.3.1")
        classpath('org.postgresql:postgresql:9.3-1100-jdbc41')
    }
}

dependencies {

    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${versions['tomcatVersion']}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${versions['tomcatVersion']}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${versions['tomcatVersion']}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    //Goovy / util libs
    compile 'org.codehaus.groovy:groovy-all:2.2.1'
    compile 'joda-time:joda-time:2.3'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'com.google.guava:guava:15.0'

    //Logging
    compile 'ch.qos.logback:logback-classic:1.0.13'
    compile 'ch.qos.logback:logback-core:1.0.13'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:jcl-over-slf4j:1.7.5'

    //Hibernate / DB
    compile "org.hibernate:hibernate-core:${versions['hibernateVersion']}"
    compile "org.hibernate:hibernate-entitymanager:${versions['hibernateVersion']}"
    compile 'com.jolbox:bonecp-spring:0.8.0.RELEASE'
    compile 'org.postgresql:postgresql:9.3-1100-jdbc41'
    compile 'org.jadira.usertype:usertype.core:3.1.0.CR10'
    compile "com.googlecode.flyway:flyway-core:${versions['flywayVersion']}"

    //Jackson
    compile "com.fasterxml.jackson.core:jackson-databind:${versions['jacksonVersion']}"
    compile "com.fasterxml.jackson.core:jackson-core:${versions['jacksonVersion']}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${versions['jacksonVersion']}"
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.2.3'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.3.0'

    //Spring
    compile "org.springframework:spring-context:${versions['springVersion']}"
    compile "org.springframework:spring-jdbc:${versions['springVersion']}"
    compile "org.springframework:spring-orm:${versions['springVersion']}"
    compile "org.springframework:spring-webmvc:${versions['springVersion']}"

    //Spring security
    compile 'org.springframework.security:spring-security-web:3.2.0.RELEASE'
    compile 'org.springframework.security:spring-security-config:3.2.0.RELEASE'
    compile 'org.springframework.security:spring-security-openid:3.2.0.RELEASE'
    compile 'org.springframework.security:spring-security-taglibs:3.2.0.RELEASE'

    //This will be provided by the servet container (jetty?)
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    providedCompile 'javax.servlet.jsp:jsp-api:2.1'
    compile "javax.servlet:jstl:1.2"

    //Woo testing!
    testCompile 'org.testng:testng:6.8.7'
    testCompile 'org.easytesting:fest-assert:1.4'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile "org.springframework:spring-test:${versions['springVersion']}"
    testCompile 'com.h2database:h2:1.3.174'
}

test {
    useTestNG()
}

flyway {
    url = 'jdbc:postgresql://localhost/grubdice_dev'
    user = 'grubdice'
}

repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/snapshot' }
}

tomcatRun {
    doFirst {
        System.setProperty("spring.profiles.active", "dev")
    }
    contextPath = '/'
    reloadable = true
}

task createDbMigrationScript() << {
    def date = new Date().format("yyyy.MM.dd.HH.mm")
    if(sql ==  null) throw new InvalidUserDataException("Need to specify a description")
    def filePath = "$projectDir/src/main/resources/db/migration/V${date}__${sql.replace(' ', '_')}.sql"
    file(filePath).text = ' -- CHANGE ME'
    println("New DB Migration script created at $filePath")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}
